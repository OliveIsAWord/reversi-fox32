struct Color:
    r: u8
    g: u8
    b: u8
    a: u8

fn color_to_u32(anon color: Color) u32:
    color.r as u32
         + color.g as u32 << 8_u32
         + color.b as u32 << 16_u32
         + color.a as u32 << 24_u32

# fox32rom routine definitions

# ; system jump table
# get_rom_version:                          jmp [0xF0040000]
# system_vsync_handler:                     jmp [0xF0040004]
# get_mouse_position:                       jmp [0xF0040008]
# new_event:                                jmp [0xF004000C]
# wait_for_event:                           jmp [0xF0040010]
# get_next_event:                           jmp [0xF0040014]

## 0xF0040018
extern fn panic(anon msg: u8[^])

# get_mouse_button:                         jmp [0xF004001C]
# scancode_to_ascii:                        jmp [0xF0040020]

## 0xF0040024
extern fn shift_pressed()

## 0xF0040028
extern fn shift_released()

## 0xF004002C
extern fn caps_pressed()

# poweroff:                                 jmp [0xF0040030]
# get_rom_api_version:                      jmp [0xF0040034]
# 
# ; generic drawing jump table
# draw_str_generic:                         jmp [0xF0041000]
# draw_format_str_generic:                  jmp [0xF0041004]
# draw_decimal_generic:                     jmp [0xF0041008]
# draw_hex_generic:                         jmp [0xF004100C]
# draw_font_tile_generic:                   jmp [0xF0041010]
# draw_tile_generic:                        jmp [0xF0041014]
# set_tilemap:                              jmp [0xF0041018]
# draw_pixel_generic:                       jmp [0xF004101C]
# draw_filled_rectangle_generic:            jmp [0xF0041020]
# get_tilemap:                              jmp [0xF0041024]
# set_font:                                 jmp [0xF0041028]
# 
# ; background jump table
# fill_background:                          jmp [0xF0042000]
# draw_str_to_background:                   jmp [0xF0042004]
# draw_format_str_to_background:            jmp [0xF0042008]
# draw_decimal_to_background:               jmp [0xF004200C]
# draw_hex_to_background:                   jmp [0xF0042010]
# draw_font_tile_to_background:             jmp [0xF0042014]
# draw_tile_to_background:                  jmp [0xF0042018]
# draw_pixel_to_background:                 jmp [0xF004201C]
# draw_filled_rectangle_to_background:      jmp [0xF0042020]
# 
# ; overlay jump table
# fill_overlay:                             jmp [0xF0043000]
# draw_str_to_overlay:                      jmp [0xF0043004]
# draw_format_str_to_overlay:               jmp [0xF0043008]

## 0xF004300C
extern fn draw_decimal_to_overlay(value: usize, x: usize, y: usize, foreground_color: u32, background_color: u32, overlay: u8)

# draw_hex_to_overlay:                      jmp [0xF0043010]
# draw_font_tile_to_overlay:                jmp [0xF0043014]
# draw_tile_to_overlay:                     jmp [0xF0043018]

## 0xF004301C
extern fn fox32rom_draw_pixel_to_overlay(_, x: usize, y: usize, color: u32, overlay: u8)
fn draw_pixel_to_overlay(_, x: usize, y: usize, color: Color, overlay: u8):
    fox32rom_draw_pixel_to_overlay(:x, :y, :overlay, color: color_to_u32(color))
    
## 0xF0043020
extern fn fox32rom_draw_filled_rectangle_to_overlay(_, x: usize, y: usize, width: usize, height: usize, color: u32, overlay: u8)
fn draw_filled_rectangle_to_overlay(_, x: usize, y: usize, width: usize, height: usize, color: Color, overlay: u8):
    fox32rom_draw_filled_rectangle_to_overlay(:x, :y, :width, :height, :overlay, color: color_to_u32(color))

# check_if_overlay_covers_position:         jmp [0xF0043024]
# check_if_enabled_overlay_covers_position: jmp [0xF0043028]
# enable_overlay:                           jmp [0xF004302C]
# disable_overlay:                          jmp [0xF0043030]
# move_overlay:                             jmp [0xF0043034]
# resize_overlay:                           jmp [0xF0043038]
# set_overlay_framebuffer_pointer:          jmp [0xF004303C]
# get_unused_overlay:                       jmp [0xF0043040]
# make_coordinates_relative_to_overlay:     jmp [0xF0043044]
# 
# ; menu bar jump table
# enable_menu_bar:                          jmp [0xF0044000]
# disable_menu_bar:                         jmp [0xF0044004]

## 0xF0044008
extern fn menu_bar_click_event(_, menu_bar: void^, x: usize)

# clear_menu_bar:                           jmp [0xF004400C]
# draw_menu_bar_root_items:                 jmp [0xF0044010]
# draw_menu_items:                          jmp [0xF0044014]

## 0xF0044018
extern fn close_menu(_, menu_bar: void^)

## 0xF004401C
extern fn menu_update_event(_, _unused: usize, menu_bar: void^, selected_menu_bar_item: usize, hovering_menu_item: usize)

# ; disk jump table
# read_sector:                              jmp [0xF0045000]
# write_sector:                             jmp [0xF0045004]
# ryfs_open:                                jmp [0xF0045008]
# ryfs_seek:                                jmp [0xF004500C]
# ryfs_read:                                jmp [0xF0045010]
# ryfs_read_whole_file:                     jmp [0xF0045014]
# ryfs_get_size:                            jmp [0xF0045018]
# ryfs_get_file_list:                       jmp [0xF004501C]
# ryfs_tell:                                jmp [0xF0045020]
# ryfs_write:                               jmp [0xF0045024]
# is_romdisk_available:                     jmp [0xF0045028]
# ryfs_create:                              jmp [0xF004502C]
# ryfs_delete:                              jmp [0xF0045030]
# ryfs_format:                              jmp [0xF0045034]
# is_ramdisk_formatted:                     jmp [0xF0045038]
# ryfs_get_dir_name:                        jmp [0xF004503C]
# ryfs_get_parent_dir:                      jmp [0xF0045040]
# 
# ; memory copy/compare jump table
# copy_memory_bytes:                        jmp [0xF0046000]
# copy_memory_words:                        jmp [0xF0046004]

## 0xF0046008
extern fn copy_string(source: u8[^], dest: u8[^]mut)

# compare_memory_bytes:                     jmp [0xF004600C]
# compare_memory_words:                     jmp [0xF0046010]
# compare_string:                           jmp [0xF0046014]

## 0xF0046018
extern fn string_length(anon string: u8[^]) usize

# ; integer jump table
# string_to_int:                            jmp [0xF0047000]
# 
# ; audio jump table
# play_audio:                               jmp [0xF0048000]
# stop_audio:                               jmp [0xF0048004]
# 
# ; random number jump table
# random:                                   jmp [0xF0049000]

## 0xF0049004
extern fn fox32rom_random_range(_, _unused: usize, min: usize, max: usize) usize
fn random_range(_, min: usize, max: usize) usize:
    fox32rom_random_range(_unused: 0, :min, :max)

# Event types

const EVENT_TYPE_MOUSE_CLICK = 0x0000_0000
const EVENT_TYPE_MOUSE_RELEASE = 0x0000_0001
const EVENT_TYPE_KEY_DOWN = 0x0000_0002
const EVENT_TYPE_KEY_UP = 0x0000_0003
const EVENT_TYPE_MENU_BAR_CLICK = 0x0000_0004
const EVENT_TYPE_MENU_UPDATE = 0x0000_0005
const EVENT_TYPE_MENU_CLICK = 0x0000_0006
const EVENT_TYPE_MENU_ACK = 0x0000_0007
const EVENT_TYPE_EMPTY = 0xFFFF_FFFF

# Key codes

const KEY_CTRL = 0x1D
const KEY_LSHIFT = 0x2A
const KEY_RSHIFT = 0x36
const KEY_CAPS = 0x3A
