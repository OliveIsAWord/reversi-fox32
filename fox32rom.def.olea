struct void

struct File:
    disk u8
    first_sector u16
    seek_offset usize
    system_type u8
    reserved_1 u32
    reserved_2 u32
    reserved_3 u32
    reserved_4 u32
    reserved_5 u32
    reserved_6 u32

struct RomVersion:
    major u32
    minor u32
    patch u32

struct Color:
    r u8
    g u8
    b u8
    a u8

struct Window:
    frame_buffer Color^
    event_queue void^
    event_queue_bottom void^
    title u8^
    width u16
    height u16
    x_position u16
    y_position u16
    overlay u8
    reserved_1 u8
    flags u16
    menu_bar void^
    first_widget void^
    active_widget void^

struct Event:
    event_type u32
    parameter_0 u32
    parameter_1 u32
    parameter_2 u32
    parameter_3 u32
    parameter_4 u32
    parameter_5 u32
    parameter_6 u32

extern fn set_current_disk_id(id u8)
extern fn yield_task()
extern fn end_current_task() # noreturn
extern fn allocate_memory(size usize) void^
extern fn free_memory(ptr void^)
extern fn new_window(window Window^, title u8^, width u16, height u16, x_position u16, y_position u16, menu_bar void^, widgets void^)
extern fn destroy_window(window Window^)
extern fn get_next_window_event(window Window^) Event
extern fn start_dragging_window(window Window^)
extern fn write(file File^, source u8^, len usize)
extern fn get_rom_version() RomVersion
